
##
# Function to more easy add alias definitions.
#
# Usage:
#   add <alias name> <command to run>
#
function add () {
  if [ ! -f $BASH_KIT_ALIASES ]; then
    touch $BASH_KIT_ALIASES
  fi
  
  local command=$1
  shift 1
  alias="alias $command='$@'"
  read -p "Add alias: $alias?"
  printf "$alias\n" >> $BASH_KIT_ALIASES
  if [[ $# ]]; then
    echo "Alias added"
    source $BASH_KIT_ALIASES
    else
    echo "Failed to add alias"
  fi
}

##
# Simple recursive grep helper. Searches for <regex pattern> within the
# current dir.
#
function grepr () {
  if [ $# -lt 1 ]; then
    echo "usage: grepr <regexp> [context]"
    return
  fi
  if [ $# == 1 ]; then
    grep $1 $GREP_OPTIONS -R .
    return
  fi
  if [ $# == 2 ]; then
    grep --context=$2 $1 $GREP_OPTIONS -R .
    return
  fi
}

##
# Version Control System switcher.
#
function vc () {
  if [ $# == 1 ]; then
    export VC=$1
  fi
  echo $VC
}

##
# VCS agnostic commit with message.
#
# Usage:
#   ci <message>
#
function ci () {
  if [ $# -lt 1 ]; then
    echo "usage: ci <message>"
    return
  fi
  message="$1"
  $VC commit -m "$message"
  if [ "$VC" == 'git' ]; then
    git push origin master
  fi
}

##
# VCS agnostic diff.
#
# Usage:
#   dif
#
function dif () {
  if [ $VC == 'cvs' ]; then
    cvs diff -uP
  else
    $VC diff
  fi
}

##
# VCS agnostic status.
#
# Usage:
#   st
#
function st () {
  $VC status
}

##
# Set up a git repo using the contents of the pwd.
#
# Usage:
#   gitsetup <repo>
#
function gitsetup () {
  # if an argument is not given use the directory name
  if [[ -n $1 ]]; then
    repo="$1"
  else
    repo=`basename "$PWD"`
  fi
  location="$REPO_LOCATION/$repo.git"
  git init
  git add .
  git commit -m "Initial commit."
  git remote add origin $REPO_SERVER:$location
  git push origin master
}

##
# Allow a repository to be readable by git-daemon.
#
# Usage:
#   gitexport <repo>
#
function gitexport () {
  # if an argument is not given use the directory name
  if [[ -n $1 ]]; then
    repo="$1"
  else
    repo=`basename "$PWD"`
  fi
  ssh $REPO_SERVER "touch $REPO_LOCATION/$repo.git/git-daemon-export-ok"
}

##
# Quickly switch cvs logins.
#
# Usage:
#   cvslogin <username>
#
function cvslogin () {
  export CVSROOT=":pserver:$1@cvs.drupal.org:/cvs/drupal-contrib"
  cvs login
}
